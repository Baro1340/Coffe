/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import dao.UserDAO;
import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import model.User;

/**
 *
 * @author LEGION 5 PRO
 */
public class Login extends javax.swing.JFrame {

    public String emailPattern = "^[a-zA-Z0-9]+[@]+[a-zA-Z0-9]+[.]+[a-zA-Z0-9]+$";
    private String placeholderemail = "Nhập email";
    private String placeholdermatKhau = "Nhập mật khẩu";
    /**
     * Creates new form Login
     */
    public Login() {

        setExtendedState(JFrame.MAXIMIZED_BOTH);
        
        
        initComponents();
        
//        btnThoat.requestFocus();
        
        btnDangNhap.setEnabled(false);

        ImageIcon icon = new ImageIcon("src/images/first_page_background.png");
        Image img = icon.getImage();
        Image imgScale = img.getScaledInstance(jLabel2.getWidth(), jLabel2.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon sicon = new ImageIcon(imgScale);
        jLabel2.setIcon(sicon);
    }

    public void clear() {
        txtEmail.setText("");
        txtMatKhau.setText("");
        btnDangNhap.setEnabled(false);
    }

    public void validateFields() {
        String email = txtEmail.getText();
        String matKhau = txtMatKhau.getText();
        if (email.matches(emailPattern) && !matKhau.equals("")) {
            btnDangNhap.setEnabled(true);

        } else {
            btnDangNhap.setEnabled(false);

        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Email = new javax.swing.JLabel();
        MatKhau = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtMatKhau = new javax.swing.JPasswordField();
        btnDangNhap = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 60)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setText("Đăng Nhập");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 300, -1, -1));

        Email.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        Email.setText("Email");
        getContentPane().add(Email, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 430, 80, -1));

        MatKhau.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        MatKhau.setText("Mật Khẩu");
        getContentPane().add(MatKhau, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 490, -1, -1));

        txtEmail.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        txtEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtEmailFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEmailFocusLost(evt);
            }
        });
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });
        txtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEmailKeyReleased(evt);
            }
        });
        getContentPane().add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 430, 480, -1));

        txtMatKhau.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        txtMatKhau.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMatKhauFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMatKhauFocusLost(evt);
            }
        });
        txtMatKhau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMatKhauActionPerformed(evt);
            }
        });
        txtMatKhau.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMatKhauKeyReleased(evt);
            }
        });
        getContentPane().add(txtMatKhau, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 490, 430, 40));

        btnDangNhap.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnDangNhap.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/login.png"))); // NOI18N
        btnDangNhap.setText("Đăng Nhập");
        btnDangNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangNhapActionPerformed(evt);
            }
        });
        getContentPane().add(btnDangNhap, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 560, 230, -1));

        btnThoat.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnThoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/exit small.png"))); // NOI18N
        btnThoat.setText("Thoát");
        btnThoat.setFocusPainted(false);
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });
        getContentPane().add(btnThoat, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 560, 200, -1));

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton1.setText("Quên Mật Khẩu ?");
        jButton1.setFocusable(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 610, 230, -1));

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton2.setText("Đăng Ký");
        jButton2.setFocusable(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 610, 200, -1));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Colebemis-Feather-Eye.24.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 490, 50, 40));

        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1730, 1080));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDangNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangNhapActionPerformed
       dangNhap();
    }//GEN-LAST:event_btnDangNhapActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new ForgotPassword().setVisible(true);
        TimerTask task = new TimerTask() {
            @Override
            public void run() {
                // Câu lệnh mà bạn muốn thực hiện sau khoảng thời gian
                setVisible(false);
            }
        };

        Timer timer = new Timer();
        int delay = 30; // Khoảng thời gian (đơn vị: mili giây) trước khi thực hiện câu lệnh
        timer.schedule(task, delay);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        Font font = new Font("Arial", Font.BOLD, 15);
        ImageIcon icon = new ImageIcon("src/images/close2.png");
        Image img = icon.getImage();
        Image imgScale = img.getScaledInstance(50, 50, Image.SCALE_SMOOTH);
        ImageIcon sicon = new ImageIcon(imgScale);

        JLabel label = new JLabel("Bạn Có Thực Sự Muốn Đóng Ứng Dụng Này?");
        label.setFont(new Font("Arial", Font.BOLD, 14));

        int a = JOptionPane.showConfirmDialog(null, label, "SELECT", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (a == 0) {
            System.exit(0);
        }
    }//GEN-LAST:event_btnThoatActionPerformed

    private void txtEmailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyReleased
        validateFields();
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txtMatKhau.requestFocus(); // Chuyển focus sang trường mật khẩu
        }
    }//GEN-LAST:event_txtEmailKeyReleased

    private void txtMatKhauKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMatKhauKeyReleased
        validateFields();
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            dangNhap();
        }
    }//GEN-LAST:event_txtMatKhauKeyReleased

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new Signup().setVisible(true);
        TimerTask task = new TimerTask() {
            @Override
            public void run() {
                // Câu lệnh mà bạn muốn thực hiện sau khoảng thời gian
                setVisible(false);
            }
        };

        Timer timer = new Timer();
        int delay = 50; // Khoảng thời gian (đơn vị: mili giây) trước khi thực hiện câu lệnh
        timer.schedule(task, delay);


    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtMatKhauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMatKhauActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMatKhauActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Kiểm tra trạng thái hiển thị mật khẩu
        if (txtMatKhau.getEchoChar() == '\u25CF') {
            // Nếu đang ẩn, hiển thị mật khẩu
            txtMatKhau.setEchoChar((char) 0);

        } else {
            // Nếu đang hiển thị, ẩn mật khẩu
            txtMatKhau.setEchoChar('\u25CF');

        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txtEmailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmailFocusGained
        if (txtEmail.getText().equals(placeholderemail)) {
                    txtEmail.setText("");
                    txtEmail.setForeground(Color.BLACK);
                }
    }//GEN-LAST:event_txtEmailFocusGained

    private void txtEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmailFocusLost
        if (txtEmail.getText().equals("")) {
                    txtEmail.setText(placeholderemail);
                    txtEmail.setForeground(Color.GRAY);
                }
    }//GEN-LAST:event_txtEmailFocusLost

    private void txtMatKhauFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMatKhauFocusGained
        txtMatKhau.setEchoChar('\u25CF');
        if (txtMatKhau.getText().equals(placeholdermatKhau)) {
                    
                    txtMatKhau.setText("");
                    txtMatKhau.setForeground(Color.BLACK);
                }
    }//GEN-LAST:event_txtMatKhauFocusGained

    private void txtMatKhauFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMatKhauFocusLost
        
        if (txtMatKhau.getText().equals("")) {
                    txtMatKhau.setText(placeholdermatKhau);
                    txtMatKhau.setForeground(Color.GRAY);
                    txtMatKhau.setEchoChar((char) 0);
                }
        else{
            txtMatKhau.setEchoChar('\u25CF');
        }
    }//GEN-LAST:event_txtMatKhauFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new Login().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Email;
    private javax.swing.JLabel MatKhau;
    private javax.swing.JButton btnDangNhap;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JPasswordField txtMatKhau;
    // End of variables declaration//GEN-END:variables

    private void dangNhap() {
         String email = txtEmail.getText();
        String matKhau = new String(txtMatKhau.getPassword());
        System.out.println(matKhau);
        User user = UserDAO.getInstance().login(email, matKhau);
        JLabel label = new JLabel("Tên Đăng Nhập Hoặc Mật Khẩu Không Hợp Lệ");
        label.setFont(new Font("Arial", Font.BOLD, 14));
        JLabel label2 = new JLabel("Wait For Admin Approval");
        label2.setFont(new Font("Arial", Font.BOLD, 14));
        if (user == null) {
            JOptionPane.showMessageDialog(null, label, "MESSAGE", JOptionPane.ERROR_MESSAGE);
        } else {
            if (user.getTinhTrang().equals("false")) {
                ImageIcon icon = new ImageIcon("src/popupicon/wait.png");
                JOptionPane.showMessageDialog(null, label2, "MESSAGE", JOptionPane.INFORMATION_MESSAGE, icon);
                clear();
            }
            if (user.getTinhTrang().equals("true")) {
                new Home(email).setVisible(true);
                TimerTask task = new TimerTask() {
                    @Override
                    public void run() {
                        // Câu lệnh mà bạn muốn thực hiện sau khoảng thời gian
                        setVisible(false);

                    }
                };

                Timer timer = new Timer();
                int delay = 30; // Khoảng thời gian (đơn vị: mili giây) trước khi thực hiện câu lệnh
                timer.schedule(task, delay);

            }
        }
    }
}
